The requirements:
•	It must pull data from the internet (typically webpages)
•	It must pull data from 5 different webpages (using pandas)
•	It must do some basic calculations on numerical data from 3 of those pages (mean, median, mode, min, max)
•	It must make use of your own methods where appropriate
•	It must produce at least 3 charts from 3 of those pages
•	It must save the data to a file




##
import pandas as pd
import numpy as np      
import matplotlib.pyplot as plt
from collections import Counter

url = "https://en.wikipedia.org/wiki/List_of_all-time_NFL_win%E2%80%93loss_records"
data1 = pd.read_html(url)
table1=data1[2]
print(table1)
ranking = table1['Team'].tolist()
wins = table1['Won'].tolist()

print(wins)
n = len(wins)
 
get_sum = sum(wins)
mean = get_sum / n
 
print("Mean / Average is: " + str(mean))

wins.sort()
 
if n % 2 == 0:
    median1 = wins[n//2]
    median2 = wins[n//2 - 1]
    median = (median1 + median2)/2
else:
    median = wins[n//2]
print("Median is: " + str(median))

data = Counter(wins)
get_mode = dict(data)
mode = [k for k, v in get_mode.items() if v == max(list(data.values()))]
 
if len(mode) == n:
    get_mode = "No mode found"
else:
    get_mode = "Mode is / are: " + ', '.join(map(str, mode))
     
print(get_mode)

l=wins
max1=l[0]
for i in range(1,len(l)):
    if(l[i]>max1):
        max1=l[i]
print("maximum is:",max1)

l=wins
min1=l[0]
for i in range(1,len(l)):
    if(l[i]<min1):
        min1=l[i]
print("minimum is:",min1)


loss = table1['Lost'].tolist()

x = np.arange(len(ranking))
width =0.5
fig1 = plt.gcf()
plt.bar(x-0.7, wins, width, color='blue')
plt.bar(x, loss, width, color='yellow')

plt.xticks(x,  ranking)
plt.xlabel("Teams")

plt.ylabel("Number of Matches")
plt.legend(["wins", "loss" , "Mat"])
plt.xlim(1,4)
plt.savefig("ChartNFL.jpg")
table1.to_csv("NFL.csv")
plt.show()
#Save chart


OUTPUTS
..\..\Downloads\ChartFIFA.jpg


































a)	Graph 1
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from collections import Counter

url = "https://en.wikipedia.org/wiki/2022_FIFA_World_Cup_qualification_(CONMEBOL)"
data1 = pd.read_html(url)
table1=data1[4]
ranking = table1['Pos'].tolist()
wins = table1['W'].tolist()
print(wins)
n = len(wins)
 
get_sum = sum(wins)
mean = get_sum / n
 
print("Mean / Average is: " + str(mean))

wins.sort()
 
if n % 2 == 0:
    median1 = wins[n//2]
    median2 = wins[n//2 - 1]
    median = (median1 + median2)/2
else:
    median = wins[n//2]
print("Median is: " + str(median))

data = Counter(wins)
get_mode = dict(data)
mode = [k for k, v in get_mode.items() if v == max(list(data.values()))]
 
if len(mode) == n:
    get_mode = "No mode found"
else:
    get_mode = "Mode is / are: " + ', '.join(map(str, mode))
     
print(get_mode)

l=wins
max1=l[0]
for i in range(1,len(l)):
    if(l[i]>max1):
        max1=l[i]
print("maximum is:",max1)

l=wins
min1=l[0]
for i in range(1,len(l)):
    if(l[i]<min1):
        min1=l[i]
print("minimum is:",min1)


loss = table1['L'].tolist()
x = np.arange(len(ranking))
width =0.5
fig1 = plt.gcf()
plt.bar(x-0.4, wins, width, color='red')
plt.bar(x, loss, width, color='blue')
plt.xticks(x,  ranking)
plt.xlabel("Teams")

plt.ylabel("Number of Matches")
plt.legend(["wins", "loss"])
plt.show()
#Save chart
plt.savefig("ChartFIFA.png")






2) import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from collections import Counter

url = "https://en.wikipedia.org/wiki/Kolkata_Knight_Riders"
data1 = pd.read_html(url)
table1=data1[8]
print(table1)
ranking = table1['Opposition'].tolist()
wins = table1['Won'].tolist()



loss = table1['Lost'].tolist()

n = len(loss)
 
get_sum = sum(loss)
mean = get_sum / n
 
print("Mean / Average is: " + str(mean))

wins.sort()
 
if n % 2 == 0:
    median1 = loss[n//2]
    median2 = loss[n//2 - 1]
    median = (median1 + median2)/2
else:
    median = loss[n//2]
print("Median is: " + str(median))

data = Counter(wins)
get_mode = dict(data)
mode = [k for k, v in get_mode.items() if v == max(list(data.values()))]
 
if len(mode) == n:
    get_mode = "No mode found"
else:
    get_mode = "Mode is / are: " + ', '.join(map(str, mode))
     
print(get_mode)

l=loss
max1=l[0]
for i in range(1,len(l)):
    if(l[i]>max1):
        max1=l[i]
print("maximum is:",max1)

l=loss
min1=l[0]
for i in range(1,len(l)):
    if(l[i]<min1):
        min1=l[i]
print("minimum is:",min1)

x = np.arange(len(ranking))
width =0.3
fig1 = plt.gcf()
plt.bar(x-0.8, wins, width, color='red')
plt.bar(x, loss, width, color='yellow')

plt.xticks(x,  ranking)
plt.xlabel("Teams")

plt.ylabel("Number of Matches")
plt.legend(["wins", "loss" , "Mat"])
plt.show()
#Save chart
plt.savefig("ChartFIFA.jpg")




3) import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from collections import Counter

url = "https://en.wikipedia.org/wiki/List_of_all-time_NFL_win%E2%80%93loss_records"
data1 = pd.read_html(url)
table1=data1[2]
print(table1)
ranking = table1['Team'].tolist()
wins = table1['Won'].tolist()

print(wins)
n = len(wins)
 
get_sum = sum(wins)
mean = get_sum / n
 
print("Mean / Average is: " + str(mean))

wins.sort()
 
if n % 2 == 0:
    median1 = wins[n//2]
    median2 = wins[n//2 - 1]
    median = (median1 + median2)/2
else:
    median = wins[n//2]
print("Median is: " + str(median))

data = Counter(wins)
get_mode = dict(data)
mode = [k for k, v in get_mode.items() if v == max(list(data.values()))]
 
if len(mode) == n:
    get_mode = "No mode found"
else:
    get_mode = "Mode is / are: " + ', '.join(map(str, mode))
     
print(get_mode)

l=wins
max1=l[0]
for i in range(1,len(l)):
    if(l[i]>max1):
        max1=l[i]
print("maximum is:",max1)

l=wins
min1=l[0]
for i in range(1,len(l)):
    if(l[i]<min1):
        min1=l[i]
print("minimum is:",min1)



loss = table1['Lost'].tolist()

x = np.arange(len(ranking))
width =0.5
fig1 = plt.gcf()
plt.bar(x-0.7, wins, width, color='blue')
plt.bar(x, loss, width, color='yellow')

plt.xticks(x,  ranking)
plt.xlabel("Teams")

plt.ylabel("Number of Matches")
plt.legend(["wins", "loss" , "Mat"])
plt.show()
#Save chart
plt.savefig("ChartFIFA.jpg")




1)
data1 = pd.read_html('https://en.wikipedia.org/wiki/2022_FIFA_World_Cup_qualification_(CONMEBOL)')
table1=data1[4]
ranking = table1['Pos'].tolist()
play = table1['W'].tolist()
wins = table1['GD'].tolist()
loss = table1['L'].tolist()
x = np.arange(len(ranking))
width =0.5
plt.bar(x-0.4, wins, width, color='red')
plt.bar(x, loss, width, color='blue')
plt.xticks(x,  ranking)
plt.xlabel("ranking")
plt.ylabel("play")
plt.legend(["wins", "loss"])
plt.show()

3
import requests
from bs4 import BeautifulSoup
  
url = 'https://www.bbc.com/news'
response = requests.get(url)
  
soup = BeautifulSoup(response.text, 'html.parser')
Head1=soup.find('h3',{'class': 'gs-c-promo-heading__title gel-paragon-bold nw-o-link-split__text'}).text
Head2=soup.find('h3',{'class': 'gs-c-promo-heading__title gel-pica-bold nw-o-link-split__text'}).text
Head3=soup.find('h3',{'class': 'gs-c-promo-heading__title gel-double-pica-bold nw-o-link-split__text'}).text
print (Head1)
print (Head2)
print (Head3)


